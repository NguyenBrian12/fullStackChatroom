{"version":3,"sources":["serviceWorker.js","Login.js","App.js","services/app.services.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","library","add","faKhanda","faShieldAlt","Login","state","appUserId","moveToChatShield","_this","props","history","push","moveToChatSword","react_default","a","createElement","className","id","src","alt","height","width","type","onClick","this","react_fontawesome_index_es","icon","Component","faRocket","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","messages","messageForm","message","value","alreadyScrolled","onChange","e","preventDefault","setState","target","sendMessage","data","socket","emit","axios","post","getMessages","get","then","response","result","scrollToBottom","messagesEnd","scrollIntoView","behavior","backToLogin","io","host","transports","on","newMessage","concat","toConsumableArray","parseInt","params","_this2","href","draggable","length","map","moment","dateCreated","format","style","float","clear","ref","el","placeholder","disabled","Routes","BrowserRouter","Fragment","Route","exact","path","component","React","ReactDOM","render","src_Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04b78ebb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faKhanda } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(faKhanda);\r\nlibrary.add(faShieldAlt);\r\nclass Login extends Component {\r\n  state = {\r\n    appUserId: null\r\n  };\r\n  moveToChatShield = () => {\r\n    this.props.history.push(\"/chatroom/user/2\");\r\n  };\r\n  moveToChatSword = () => {\r\n    this.props.history.push(\"/chatroom/user/1\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper fadeInDown\">\r\n        <div id=\"formContent\">\r\n          <form>\r\n            <div>\r\n              <img\r\n                src=\"https://i.imgur.com/36BdWxP.jpg\"\r\n                alt=\"ign logo\"\r\n                height=\"70\"\r\n                width=\"150\"\r\n              />\r\n            </div>\r\n            <div className=\" title fadeIn first\">\r\n              Welcome to the IGN Chatroom <br />\r\n              <div className=\"spacing\">Are you Sword or Shield?</div>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"swordButton fadeIn fourth\"\r\n                onClick={this.moveToChatSword}\r\n              >\r\n                Sword <FontAwesomeIcon icon=\"khanda\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"shieldButton fadeIn fourth\"\r\n                onClick={this.moveToChatShield}\r\n              >\r\n                Shield <FontAwesomeIcon icon=\"shield-alt\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { GetAllMessages, InsertMessage } from \"./services/app.services\";\nimport moment from \"moment\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRocket } from \"@fortawesome/free-solid-svg-icons\";\nimport { faKhanda } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faRocket);\nlibrary.add(faKhanda);\nlibrary.add(faShieldAlt);\nclass App extends Component {\n  state = {\n    appUserId: null,\n    messages: [],\n    messageForm: \"\",\n    message: \"\",\n    value: [],\n    alreadyScrolled: false\n  };\n  componentDidMount() {\n    this.getMessages();\n    const id = parseInt(this.props.match.params.appUserId);\n    this.setState({ appUserId: id });\n  }\n  onChange = e => {\n    e.preventDefault();\n    this.setState({\n      message: e.target.value\n    });\n  };\n  constructor(props) {\n    super(props);\n    this.socket = io(window.location.host, {\n      transports: [\"websocket\"]\n    });\n\n    this.socket.on(\"RECEIVE_MESSAGE\", function(data) {\n      newMessage(data);\n    });\n\n    const newMessage = data => {\n      this.setState({ messages: [...this.state.messages, data] });\n      this.scrollToBottom();\n    };\n  }\n\n  sendMessage = e => {\n    e.preventDefault();\n    this.socket.emit(\"send_message\", {\n      message: this.state.message,\n      appUserId: this.state.appUserId\n    });\n    InsertMessage({\n      appUserId: this.state.appUserId,\n      message: this.state.message\n    });\n    this.setState({ message: \"\" });\n  };\n  getMessages = () => {\n    GetAllMessages().then(response => {\n      if (response.data) {\n        const result = response.data;\n        this.setState({ messages: result });\n        if (this.state.alreadyScrolled === false) {\n          this.scrollToBottom();\n          this.setState({ alreadyScrolled: true });\n        }\n      }\n    });\n  };\n  scrollToBottom = () => {\n    if (this.messagesEnd !== null) {\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n  backToLogin = () => {\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const messages = this.state.messages;\n    return (\n      <div className=\"container\">\n        <div className=\"menu\">\n          <a\n            href=\"https://www.linkedin.com/in/brian-nguyen-0802b7104\"\n            className=\"back\"\n          >\n            <i className=\"fa fa-angle-left\" />{\" \"}\n            <img\n              src=\"https://i.imgur.com/G4EjwqQ.jpg\"\n              alt=\"img\"\n              draggable=\"false\"\n            />\n          </a>\n          <div className=\"name\">IGN Chatroom</div>\n          <div>\n            {\" \"}\n            <button\n              className=\"backToLogin\"\n              type=\"button\"\n              onClick={this.backToLogin}\n            >\n              Back\n            </button>\n          </div>\n          <div className=\"members\">\n            <b>\n              Sword <FontAwesomeIcon icon=\"khanda\" />\n            </b>\n            , Shield <FontAwesomeIcon icon=\"shield-alt\" />\n          </div>\n        </div>\n        <ol className=\"chat\">\n          {messages.length > 0\n            ? this.state.messages.map(message => (\n                <div>\n                  {message.appUserId !== 1 ? (\n                    <li className=\"other\">\n                      <div className=\"msg leftChat\">\n                        <div className=\"shield\">\n                          Shield <FontAwesomeIcon icon=\"shield-alt\" />\n                        </div>\n                        <p>{message.message}</p>\n                        <time>\n                          {moment(message.dateCreated).format(\"ddd LT\")}\n                        </time>\n                      </div>\n                    </li>\n                  ) : (\n                    <li className=\"self\">\n                      <div className=\"msg rightChat\">\n                        <div className=\"sword\">\n                          Sword <FontAwesomeIcon icon=\"khanda\" />\n                        </div>\n                        <p>{message.message}</p>\n\n                        <time>\n                          {moment(message.dateCreated).format(\"ddd LT\")}\n                        </time>\n                      </div>\n                    </li>\n                  )}\n                </div>\n              ))\n            : \"\"}\n          <div\n            style={{ float: \"left\", clear: \"both\" }}\n            ref={el => {\n              this.messagesEnd = el;\n            }}\n          />\n        </ol>\n\n        <div className=\"typezone\">\n          <form>\n            <textarea\n              type=\"text\"\n              placeholder=\"Say something\"\n              value={this.state.message}\n              onChange={this.onChange}\n            />\n            <button\n              type=\"button\"\n              className=\"send\"\n              onClick={this.sendMessage}\n              disabled={!this.state.message}\n            >\n              <FontAwesomeIcon icon=\"rocket\" /> Send\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport function GetAllMessages() {\r\n  return axios.get(\"/api/getAllMessages\");\r\n}\r\n\r\nexport function InsertMessage(data) {\r\n  return axios.post(\"/api/insertMessage\", data);\r\n}\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport App from \"./App\";\r\nclass Routes extends React.Component {\r\n  //npm run dev\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n          <Route exact path={\"/\"} component={Login} />\r\n          <Route\r\n            exact\r\n            path={\"/chatroom/user/:appUserId(\\\\d+)\"}\r\n            component={App}\r\n          />\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default Routes;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Routes from \"./Routes\";\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}